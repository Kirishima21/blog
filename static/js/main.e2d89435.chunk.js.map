{"version":3,"sources":["PageTitle.js","store.js","navigationBar/navigationBar.js","actionCreater.js","contentsAria/contents/about/about.js","contentsAria/contents/blog/blog.js","contentsAria/contents/contact/contact.js","contentsAria/contents/product/product.js","contentsAria/contents/top/top.js","contentsAria/mainAria/mainAria.js","contentsAria/subAria/subAria.js","contentsAria/contentsAria.js","footer/footer.js","App.js","serviceWorker.js","index.js"],"names":["PageTitle","props","className","src","React","Component","store","createStore","state","action","type","console","log","NavigationBar","value","onClick","dispatch","About","Blog","Contact","Product","Top","MainAria","view","x","getState","connect","SubAria","ContentsAria","footer","App","Boolean","window","location","hostname","match","rootElement","document","getElementById","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e2d89435.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass PageTitle extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <img className=\"titleImage\" src=\"title.svg\" />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PageTitle;","import {createStore, combineReducers } from \"redux\";\r\n\r\nexport const reducers = (state = \"top\", action)=> {\r\n  switch (action.type) {\r\n    case 'TOP':\r\n      console.log(\"top動きました\")\r\n      return  state = \"top\"\r\n    case 'ABOUT':\r\n      console.log(\"about動きました\")\r\n      return state = \"about\"\r\n    case 'PRODUCT':\r\n      console.log(\"product動きました\")\r\n      return state = \"product\"\r\n    case 'BLOG':\r\n      console.log(\"blog動きました\")\r\n      return state = \"blog\"\r\n    case 'CONTACT':\r\n      console.log(\"contact動きました\")\r\n      return state = \"contact\"\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst store = createStore(reducers)\r\n\r\nexport default store;","import React from \"react\"\r\nimport store from \"../store\"\r\nimport {changePageAbout, changePageBlog, changePageContact, changePageProduct, changePageTop} from \"../actionCreater\";\r\n\r\nconst top = function () {\r\n  store.dispatch(changePageTop())\r\n}\r\n\r\nconst about = function () {\r\n  store.dispatch(changePageAbout())\r\n}\r\n\r\nconst product = function () {\r\n  store.dispatch(changePageProduct())\r\n}\r\n\r\nconst blog = function () {\r\n  store.dispatch(changePageBlog())\r\n}\r\n\r\nconst contact = function () {\r\n  store.dispatch(changePageContact())\r\n}\r\n\r\nclass NavigationBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"NavigationMenu\">\r\n        <div className=\"top\">\r\n          <input type=\"button\" value=\"top\" onClick={() => { top() }}></input>\r\n        </div>\r\n        <div className=\"about\">\r\n          <input type=\"button\" value=\"about\" onClick={() => { about() }}></input>\r\n        </div>\r\n        <div className=\"product\">\r\n          <input type=\"button\" value=\"product\" onClick={() => { product() }}></input>\r\n        </div>\r\n        <div className=\"blog\">\r\n          <input type=\"button\" value=\"blog\" onClick={() => { blog() }}></input>\r\n        </div>\r\n        <div className=\"contact\">\r\n          <input type=\"button\" value=\"contact\" onClick={() => { contact() }}></input>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default NavigationBar ;","function changePageAbout() {\r\n  return {type: 'ABOUT'}\r\n}\r\n\r\nfunction changePageBlog() {\r\n  return {type: 'BLOG'}\r\n}\r\n\r\nfunction changePageContact() {\r\n  return {type: 'CONTACT'}\r\n}\r\n\r\nfunction changePageProduct() {\r\n  return {type: \"PRODUCT\"}\r\n}\r\n\r\nfunction changePageTop() {\r\n  return {type: \"TOP\"}\r\n}\r\n\r\nexport {\r\n  changePageAbout,\r\n  changePageBlog,\r\n  changePageContact,\r\n  changePageProduct,\r\n  changePageTop\r\n}","import React from 'react'\r\n\r\nclass About extends React.Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        ここにaboutが表示されます\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default About;","import React from 'react'\r\n\r\nclass Blog extends React.Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        ここにBlogが表示されます\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Blog;","import React from 'react'\r\n\r\nclass Contact extends React.Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        ここにcontactが表示されます\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Contact;","import React from \"react\";\r\n\r\nclass Product extends React.Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        ここにproductが表示されます\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Product;","import React from 'react'\r\n\r\nclass Top extends React.Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        ここにTopが表示されます\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Top;","import React from \"react\"\r\nimport { connect } from 'react-redux';\r\nimport store from \"../../store\";\r\n\r\n/*それぞれのコンテンツのインポート*/\r\nimport About from \"../contents/about/about\";\r\nimport Blog from \"../contents/blog/blog\";\r\nimport Contact from \"../contents/contact/contact\";\r\nimport Product from \"../contents/product/product\";\r\nimport Top from \"../contents/top/top\";\r\n\r\nclass MainAria extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n  }\r\n\r\n  render(){\r\n\r\n    let view\r\n    let x = store.getState()\r\n    if (x === \"top\"){\r\n      view = <Top/>\r\n    } else if (x === \"about\"){\r\n      view = <About/>\r\n    } else if (x === \"product\"){\r\n      view = <Product/>\r\n    } else if (x === \"blog\"){\r\n      view = <Blog/>\r\n    } else if (x === \"contact\"){\r\n      view = <Contact/>\r\n    } else {\r\n      view = \"なにもないよ？\"\r\n    }\r\n\r\n    return(\r\n      <div className=\"MainAria\" >\r\n        MainAria <br />\r\n        {view}\r\n      </div>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {state};\r\n}\r\n\r\nexport default connect(mapStateToProps)(MainAria);","import React from \"react\";\r\n\r\nclass SubAria extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n  render(){\r\n    return(\r\n      <div className=\"SubAria\" >SubAria</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SubAria;","import React from \"react\";\r\nimport MainAria from \"./mainAria/mainAria\";\r\nimport SubAria from \"./subAria/subAria\";\r\n\r\nclass ContentsAria extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"ContentsAria\">\r\n        <MainAria/>\r\n        <SubAria/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContentsAria;","import React from \"react\";\r\n\r\nclass footer extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n  render(){\r\n    return(\r\n      <div>footer</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default footer;","import React from 'react';\nimport './App.css';\nimport PageTitle from './PageTitle'\nimport NavigationBar from './navigationBar/navigationBar';\nimport ContentsAria from './contentsAria/contentsAria';\nimport Footer from './footer/footer';\n\nfunction App() {\n  return (\n    <div className=\"containar\">\n      <div className=\"Pagetitle\">\n        <PageTitle />\n      </div>\n      <div className=\"Navigation\">\n        <NavigationBar />\n      </div>\n      <div className=\"Contents\">\n        <ContentsAria />\n      </div>\n      <div className=\"Footer\">\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport store from \"./store\";\n\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>\n  , rootElement\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}